요구 사항
    -모든 PUBLIC 메서드의 호출과 응답 정보를 로그로 출력
    -애플리케이션의 흐름을 변경하면 안됨
        -로그를 남긴다고 해서 비즈니스 로직의 동작에 영향을 주면 안됨
    -메서드 호출에 걸린 시간
    -정상 흐름과 예외 흐름 구분
        -예외 발생시 예외 정보가 남아야 함

    - 메서드 호출의 깊이 표현
    - HTTP 요청을 구분
        - HTTP 요청 단위로 특정 ID를 남겨서 어떤 HTTP 요청에서 시작된 것인지 명확하게 구분이 가능해야 함
        - 트랜잭션 ID (DB 트랜잭션X), 여기서는 하나의 HTTP 요청이 시작해서 끝날 때 까지를 하나의 트랜잭션이라 함

남은 문제******************************
    -HTTP 요청을 구분하고 깊이를 표현하기 위해서 TraceId 동기화가 필요하다.
    -TraceId 의 동기화를 위해서 관련 메서드의 모든 파라미터를 수정해야 한다.
        -만약 인터페이스가 있다면 인터페이스까지 모두 고쳐야 하는 상황이다.
    -로그를 처음 시작할 때는 begin() 을 호출하고, 처음이 아닐때는 beginSync() 를 호출해야 한다.
        -만약에 컨트롤러를 통해서 서비스를 호출하는 것이 아니라, 다른 곳에서 서비스를 처음으로 호출하는 상황이라면 파리미터로 넘길 TraceId 가 없다.

    Q.HTTP 요청을 구분하고 깊이를 표현하기 위해서 TraceId 를 파라미터로 넘기는 것 말고 다른 대안은 없을까?

*****************************************************************************
****모니터링 툴을 도입하면 많은 부분이 해결되지만, 지금은 학습이 목적이라는 사실을 기억****
*****************************************************************************

ex)
    정상 요청
    [796bccd9] OrderController.request()
    [796bccd9] |-->OrderService.orderItem()
    [796bccd9] | |-->OrderRepository.save()
    [796bccd9] | |<--OrderRepository.save() time=1004ms
    [796bccd9] |<--OrderService.orderItem() time=1014ms
    [796bccd9] OrderController.request() time=1016ms
    예외 발생
    [b7119f27] OrderController.request()
    [b7119f27] |-->OrderService.orderItem()
    [b7119f27] | |-->OrderRepository.save()
    [b7119f27] | |<X-OrderRepository.save() time=0ms
    ex=java.lang.IllegalStateException: 예외 발생!
    [b7119f27] |<X-OrderService.orderItem() time=10ms
    ex=java.lang.IllegalStateException: 예외 발생!
    [b7119f27] OrderController.request() time=11ms
    ex=java.lang.IllegalStateException: 예외 발생!